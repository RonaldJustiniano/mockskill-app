<?xml version="1.0" encoding="UTF-8"?><record_update table="sc_cat_item_producer">
    <sc_cat_item_producer action="INSERT_OR_UPDATE">
        <access_type>restricted</access_type>
        <active>true</active>
        <allow_edit>false</allow_edit>
        <availability>on_desktop</availability>
        <billable>false</billable>
        <can_cancel>false</can_cancel>
        <category/>
        <checked_out/>
        <cost>0</cost>
        <custom_cart/>
        <delivery_plan display_value="DEFAULT">523da512c611228900811a37c97c2014</delivery_plan>
        <delivery_plan_script/>
        <delivery_time>1970-01-03 00:00:00</delivery_time>
        <description/>
        <display_price_property>non_zero</display_price_property>
        <entitlement_script/>
        <flow_designer_flow/>
        <fulfillment_automation_level>unspecified</fulfillment_automation_level>
        <group/>
        <hide_sp>false</hide_sp>
        <icon/>
        <ignore_price>true</ignore_price>
        <image/>
        <location/>
        <make_item_non_conversational>false</make_item_non_conversational>
        <mandatory_attachment>false</mandatory_attachment>
        <meta/>
        <mobile_hide_price>false</mobile_hide_price>
        <mobile_picture/>
        <mobile_picture_type>use_desktop_picture</mobile_picture_type>
        <model/>
        <name>Reportar Bug em Lote</name>
        <no_attachment_v2>false</no_attachment_v2>
        <no_cart>false</no_cart>
        <no_cart_v2>false</no_cart_v2>
        <no_delivery_time_v2>false</no_delivery_time_v2>
        <no_order>false</no_order>
        <no_order_now>false</no_order_now>
        <no_proceed_checkout>false</no_proceed_checkout>
        <no_quantity>false</no_quantity>
        <no_quantity_v2>false</no_quantity_v2>
        <no_save_as_draft>false</no_save_as_draft>
        <no_search>false</no_search>
        <no_wishlist_v2>false</no_wishlist_v2>
        <omit_price>false</omit_price>
        <order>0</order>
        <ordered_item_link/>
        <owner display_value="System Administrator">6816f79cc0a8016401c5a33be04be441</owner>
        <picture/>
        <post_insert_script><![CDATA[/**
* This script is executed after the record is generated. 
* `current` Is the GlideRecord produced by Record Producer. Use `current.update()` to update the record
* To access the variables, use `producer.var1` where var1 is the name of the variable
* To access the Record Producer use `cat_item`
*/]]></post_insert_script>
        <preview>JavaScript: popupOpenStandard("com.glideapp.servicecatalog_cat_item_view.do?v=1&amp;sysparm_id=6b9c03f4c3676a504d7636dc050131ed&amp;sysparm_preview=true", "summary");</preview>
        <price>0</price>
        <published_ref/>
        <recurring_frequency/>
        <redirect_url>generated_record</redirect_url>
        <request_method/>
        <roles/>
        <save_options/>
        <save_script><![CDATA[/**
* This script is executed at every step save in Catalog Builder. 
* This script is executed before `Script` is executed.
* `current` Is the GlideRecord produced by Record Producer. 
* To access the variables, use `producer.var1` where var1 is the name of the variable
* To access the Record Producer use `cat_item`
*/]]></save_script>
        <sc_catalogs>e0d08b13c3330100c8b837659bba8fb4</sc_catalogs>
        <sc_ic_item_staging/>
        <sc_ic_version/>
        <sc_template/>
        <script><![CDATA[(function executeProducerScript() {
	// ========= CONFIG =========
	var FALLBACK_TABLE = 'x_snc_mock_skillup_bug'; // ajuste se o nome técnico da sua tabela for diferente
	var ATTACH_REQUIRED_VAR = 'csv_file';         // nome da variável Attachment criada
	// =========================



	// Não criar o registro “vazio” do Producer. Vamos criar somente os bugs do CSV
	current.setAbortAction(true);

	function getTargetTable() {
		try { if (producer && producer.table_name) return String(producer.table_name); } catch (e) {}
		return FALLBACK_TABLE;
	}

	function getAllAttachmentsFromCurrent() {
		// Lê anexos desta submissão (a variável Attachment anexa os arquivos em 'current')
		var ids = [];
		var att = new GlideRecord('sys_attachment');
		att.addQuery('table_sys_id', current.getUniqueValue());
		att.orderByDesc('sys_created_on');
		att.query();
		while (att.next()) ids.push(att.getUniqueValue());
		return ids;
	}

	function readAttachmentAsString(sysAttachmentSysId) {
		var gsa = new GlideSysAttachment();
		var bytes = gsa.getBytes(sysAttachmentSysId);
		if (!bytes) throw 'Falha ao ler o anexo (sys_id=' + sysAttachmentSysId + ').';
		// Converte bytes -> string (UTF-8)
		return GlideStringUtil.base64Decode(GlideStringUtil.base64Encode(bytes));
	}

	function detectDelimiter(headerLine) {
		if (headerLine.indexOf('\t') > -1) return '\t';
		if (headerLine.indexOf(';') > -1)  return ';';
		return ','; // default
	}

	function splitCSVLine(line, delim) {
		// Parser simples – suficiente para nosso template
		return line.split(delim).map(function (s) { return s.trim(); });
	}

	function toIntOrNull(v) {
		if (v === null || v === undefined) return null;
		var n = parseInt(('' + v).trim(), 10);
		return isNaN(n) ? null : n;
	}

	function looksLikeSysId(s) {
		return s && s.length === 32 && /^[0-9a-f]{32}$/.test(s);
	}

	function mapPriority(value) {
		if (value == null || value === '') return null;
		var n = toIntOrNull(value);
		if (n != null) return n; // 1..5
		var t = ('' + value).toLowerCase().trim();
		if (t.indexOf('crit') === 0) return 1;                 // Critical
		if (t === 'alta' || t.indexOf('high') === 0) return 2; // High
		if (t === 'media' || t === 'média' || t.indexOf('mod') === 0) return 3; // Moderate
		if (t === 'baixa' || t.indexOf('low') === 0) return 4; // Low
		if (t.indexOf('plan') === 0) return 5;                 // Planning
		return null;
	}

	function mapState(value) {
		// Ajuste se sua tabela tiver choices diferentes
		// Task comum: 1-New, 2-In Progress, 3-On Hold, 6-Resolved, 7-Closed
		if (value == null || value === '') return null;
		var n = toIntOrNull(value);
		if (n != null) return n;
		var t = ('' + value).toLowerCase().trim();
		if (t.indexOf('new') === 0 || t === 'novo') return 1;
		if (t.indexOf('in progress') === 0 || t === 'em andamento') return 2;
		if (t.indexOf('hold') > -1 || t.indexOf('pausa') > -1) return 3;
		if (t.indexOf('resol') === 0) return 6;
		if (t.indexOf('clos') === 0 || t === 'fechado') return 7;
		return null;
	}

	function findUserSysId(token) {
		if (!token) return null;
		var v = ('' + token).trim();
		if (looksLikeSysId(v)) return v;

		var u = new GlideRecord('sys_user');
		// 1) Email exato
		u.addQuery('email', v);
		u.setLimit(1);
		u.query();
		if (u.next()) return String(u.getUniqueValue());

		// 2) Username exato
		u.initialize();
		u.addQuery('user_name', v);
		u.setLimit(1);
		u.query();
		if (u.next()) return String(u.getUniqueValue());

		// 3) Name (começa com) – fallback leve
		u.initialize();
		u.addQuery('name', 'STARTSWITH', v);
		u.setLimit(1);
		u.query();
		if (u.next()) return String(u.getUniqueValue());

		return null;
	}

	function findGroupSysId(token) {
		if (!token) return null;
		var v = ('' + token).trim();
		if (looksLikeSysId(v)) return v;

		var g = new GlideRecord('sys_user_group');
		// Nome exato
		g.addQuery('name', v);
		g.setLimit(1);
		g.query();
		if (g.next()) return String(g.getUniqueValue());

		// Começa com – fallback leve
		g.initialize();
		g.addQuery('name', 'STARTSWITH', v);
		g.setLimit(1);
		g.query();
		if (g.next()) return String(g.getUniqueValue());

		return null;
	}

	function setIfValid(gr, field, value) {
		if (!gr.isValidField(field)) return;
		if (value === '' || value == null) return;
		gr.setValue(field, value);
	}

	function idx(headers, key) { return headers.indexOf(key); }

	// ===== EXECUÇÃO =====
	// Garante que a variável de attachment foi usada
	if (!producer || !producer[ATTACH_REQUIRED_VAR]) {
		gs.addErrorMessage('Anexe o arquivo CSV no campo "' + ATTACH_REQUIRED_VAR + '".');
		return;
	}

	var tableName = getTargetTable();
	var attachments = getAllAttachmentsFromCurrent();
	if (!attachments || attachments.length === 0) {
		gs.addErrorMessage('Nenhum anexo encontrado nesta submissão. Use o campo de anexo "' + ATTACH_REQUIRED_VAR + '".');
		return;
	}

	var created = 0, skipped = 0, userMiss = 0, groupMiss = 0, processedFiles = 0;

	for (var a = 0; a < attachments.length; a++) {
		var raw = readAttachmentAsString(attachments[a]);
		if (!raw) continue;

		processedFiles++;

		// Remove BOM se houver
		if (raw.charCodeAt(0) === 0xFEFF) raw = raw.slice(1);

		var lines = raw.split(/\r?\n/).filter(function (l) { return l.trim().length > 0; });
		if (lines.length < 2) { skipped++; continue; }

		var delimiter = detectDelimiter(lines[0]);
		var headers = splitCSVLine(lines[0], delimiter).map(function (h) { return h.toLowerCase(); });

		var mapIdx = {
			short_description: idx(headers, 'short_description'),
			description:       idx(headers, 'description'),
			priority:          idx(headers, 'priority'),
			state:             idx(headers, 'state'),
			assigned_to:       idx(headers, 'assigned_to'),
			assignment_group:  idx(headers, 'assignment_group')
		};

		for (var i = 1; i < lines.length; i++) {
			var cols = splitCSVLine(lines[i], delimiter);
			if (cols.length === 1 && cols[0] === '') { skipped++; continue; }

			var gr = new GlideRecord(tableName);
			gr.initialize();

			// short_description / description
			if (mapIdx.short_description > -1)
				setIfValid(gr, 'short_description', cols[mapIdx.short_description]);

			if (mapIdx.description > -1)
				setIfValid(gr, 'description', cols[mapIdx.description]);

			// prioridade
			if (mapIdx.priority > -1 && gr.isValidField('priority')) {
				var p = mapPriority(cols[mapIdx.priority]);
				if (p != null) gr.setValue('priority', p);
			}

			// state
			if (mapIdx.state > -1 && gr.isValidField('state')) {
				var s = mapState(cols[mapIdx.state]);
				if (s != null) gr.setValue('state', s);
			}

			// assignment_group
			if (mapIdx.assignment_group > -1 && gr.isValidField('assignment_group')) {
				var gTok = cols[mapIdx.assignment_group];
				if (gTok) {
					var gSys = findGroupSysId(gTok);
					if (gSys) gr.setValue('assignment_group', gSys); else groupMiss++;
				}
			}

			// assigned_to
			if (mapIdx.assigned_to > -1 && gr.isValidField('assigned_to')) {
				var uTok = cols[mapIdx.assigned_to];
				if (uTok) {
					var uSys = findUserSysId(uTok);
					if (uSys) gr.setValue('assigned_to', uSys); else userMiss++;
				}
			}

			// Não criar registro sem conteúdo mínimo
			var hasCore =
				(gr.isValidField('short_description') && gr.getValue('short_description')) ||
				(gr.isValidField('description') && gr.getValue('description'));

			if (!hasCore) { skipped++; continue; }

			var sid = gr.insert();
			if (sid) created++; else skipped++;
		}
	}

	if (processedFiles === 0) {
		gs.addErrorMessage('Não foi possível processar o(s) arquivo(s). Verifique o CSV.');
		return;
	}

	var msg = 'Importe concluído: ' + created + ' bug(s) criado(s), ' + skipped + ' linha(s) ignorada(s).';
	if (userMiss > 0)  msg += ' (Assigned to não encontrado em ' + userMiss + ' linha(s))';
	if (groupMiss > 0) msg += ' (Assignment group não encontrado em ' + groupMiss + ' linha(s))';
	gs.addInfoMessage(msg);
})();
]]></script>
        <short_description/>
        <show_variable_help_on_load>false</show_variable_help_on_load>
        <start_closed>false</start_closed>
        <state/>
        <sys_class_name>sc_cat_item_producer</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-08-21 19:20:36</sys_created_on>
        <sys_id>6b9c03f4c3676a504d7636dc050131ed</sys_id>
        <sys_mod_count>9</sys_mod_count>
        <sys_name>Reportar Bug em Lote</sys_name>
        <sys_package display_value=" Mock SkillUp" source="x_snc_mock_skillup">389364c69f9322107f44bcf72024ab3f</sys_package>
        <sys_policy/>
        <sys_scope display_value=" Mock SkillUp">389364c69f9322107f44bcf72024ab3f</sys_scope>
        <sys_update_name>sc_cat_item_producer_6b9c03f4c3676a504d7636dc050131ed</sys_update_name>
        <sys_updated_by>system</sys_updated_by>
        <sys_updated_on>2025-08-21 19:49:28</sys_updated_on>
        <table_name>x_snc_mock_skillup_bug</table_name>
        <taxonomy_topic/>
        <template/>
        <template_manager_roles/>
        <type>item</type>
        <use_sc_layout>true</use_sc_layout>
        <vendor/>
        <version>9</version>
        <view/>
        <visible_bundle>true</visible_bundle>
        <visible_guide>true</visible_guide>
        <visible_standalone>true</visible_standalone>
        <workflow/>
    </sc_cat_item_producer>
    <sys_translated_text action="delete_multiple" query="documentkey=6b9c03f4c3676a504d7636dc050131ed"/>
    <fx_price action="delete_multiple" query="id=6b9c03f4c3676a504d7636dc050131ed"/>
    <fx_price action="INSERT_OR_UPDATE">
        <amount>0</amount>
        <currency display_value="BRL">BRL</currency>
        <field>price</field>
        <id>6b9c03f4c3676a504d7636dc050131ed</id>
        <parent/>
        <reference_amount>0</reference_amount>
        <reference_currency display_value="USD">USD</reference_currency>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-08-21 19:20:36</sys_created_on>
        <sys_id>50fcc7f4c3676a504d7636dc050131af</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-08-21 19:20:36</sys_updated_on>
        <table>sc_cat_item_producer</table>
        <type>calculated</type>
    </fx_price>
</record_update>
